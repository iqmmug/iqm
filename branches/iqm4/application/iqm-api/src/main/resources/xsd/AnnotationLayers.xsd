<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Project: IQM - API
  File: AnnotationLayers.xsd
  
  $Id$
  $HeadURL$
  
  This file is part of IQM, hereinafter referred to as "this program".
  %%
  Copyright (C) 2009 - 2017 Helmut Ahammer, Philipp Kainz
  %%
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as
  published by the Free Software Foundation, either version 3 of the
  License, or (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU General Public
  License along with this program.  If not, see
  <http://www.gnu.org/licenses/gpl-3.0.html>.
  #L%
  -->
  
  <!-- Author: Philipp Kainz -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  <xs:element name="annotationLayers">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="annotationLayer"/>
      </xs:sequence>
      <xs:attribute name="IQMVersion" use="required" type="xs:NMTOKEN"/>
      <xs:attribute name="JavaVersion" use="required" type="xs:NMTOKEN"/>
      <xs:attribute name="lastUpdate" use="required" type="xs:dateTime"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="annotationLayer">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="color" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="stroke" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="roiSet"/>
      </xs:sequence>
      <xs:attribute name="id" use="required" type="xs:string"/>
      <xs:attribute name="name" use="required" type="xs:string"/>
      <xs:attribute name="selected" use="required" type="xs:boolean"/>
      <xs:attribute name="visible" use="required" type="xs:boolean"/>
      <xs:attribute name="zOrder" use="required" type="xs:nonNegativeInteger"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="color">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="3" maxOccurs="4" ref="colorChannel"/>
      </xs:sequence>
      <xs:attribute name="class" use="required" type="xs:string"/>
      <xs:attribute name="name" use="required" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="colorChannel">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:integer">
          <xs:attribute name="class" use="required" type="xs:string"/>
          <xs:attribute name="type" use="required" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="stroke">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="lineWidth"/>
        <xs:element ref="endCap" minOccurs="0"/>
        <xs:element ref="lineJoin" minOccurs="0"/>
        <xs:element ref="miterLimit" minOccurs="0"/>
        <xs:element ref="dashArray" minOccurs="0"/>
        <xs:element ref="dashPhase" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="class" use="required" type="xs:string"/>
      <xs:attribute name="name" use="required" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="lineWidth">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:decimal">
          <xs:attribute name="class" use="required" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="endCap" nillable="true">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:integer">
          <xs:attribute name="class" use="required" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="lineJoin" nillable="true">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:integer">
          <xs:attribute name="class" use="required" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="miterLimit" nillable="true">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:decimal">
          <xs:attribute name="class" use="required" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="dashArray" nillable="true">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="dash"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="dash">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:decimal">
          <xs:attribute name="class" use="required" type="xs:string"/>
          <xs:attribute name="order" use="required" type="xs:integer"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="dashPhase">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:decimal">
          <xs:attribute name="class" use="required" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="roiSet" nillable="true">
    <xs:complexType>
      <xs:choice>
        <xs:element ref="angleRoi" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="ellipseRoi" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="freehandRoi" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="lineRoi" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="pointRoi" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="polygonRoi" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="rectangleRoi" minOccurs="0" maxOccurs="unbounded"/>
      </xs:choice>
      <xs:attribute name="class" use="required" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="angleRoi">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="legs" minOccurs="0"/>
        <xs:element ref="angles" minOccurs="0"/>
        <xs:element ref="path"/>
        <xs:element ref="bounds" minOccurs="0"/>
        <xs:element ref="data" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="id" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="legs">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="2" maxOccurs="2" ref="lineSegment"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="angles">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="0" maxOccurs="unbounded" ref="angle"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="angle">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:decimal">
          <xs:attribute name="class" use="required" type="xs:string"/>
          <xs:attribute name="type" use="required" type="xs:string"/>
          <xs:attribute name="units" use="required" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="ellipseRoi">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="area" minOccurs="0"/>
        <xs:element ref="path"/>
        <xs:element ref="bounds" minOccurs="0"/>
        <xs:element ref="data" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="id" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="freehandRoi">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="path"/>
        <xs:element ref="bounds" minOccurs="0"/>
        <xs:element ref="data" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="id" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="lineRoi">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="2" maxOccurs="2" ref="point"/>
        <xs:element ref="lineSegment"/>
        <xs:element ref="path"/>
        <xs:element ref="bounds" minOccurs="0"/>
        <xs:element ref="data" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="id" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="pointRoi">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="location"/>
        <xs:element ref="path"/>
        <xs:element ref="bounds" minOccurs="0"/>
        <xs:element ref="data" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="id" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="location">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="point"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="polygonRoi">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="path"/>
        <xs:element ref="bounds" minOccurs="0"/>
        <xs:element ref="data" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="id" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="rectangleRoi">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="area" minOccurs="0"/>
        <xs:element ref="path"/>
        <xs:element ref="bounds" minOccurs="0"/>
        <xs:element ref="data" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="id" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="point">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="x"/>
        <xs:element ref="y"/>
      </xs:sequence>
      <xs:attribute name="id" use="required" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="lineSegment">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="length"/>
      </xs:sequence>
      <xs:attribute name="type" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="length">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:decimal">
          <xs:attribute name="class" use="required" type="xs:string"/>
          <xs:attribute name="units" use="required" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="path">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="windingRule"/>
        <xs:element ref="segments"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="windingRule">
    <xs:complexType>
      <xs:attribute name="code" use="required" type="xs:integer"/>
      <xs:attribute name="name" use="required" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="segments">
    <xs:complexType>
      <xs:sequence>
        <xs:element maxOccurs="unbounded" ref="segment"/>
      </xs:sequence>
      <xs:attribute name="count" use="required" type="xs:integer"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="segment">
    <xs:complexType>
      <xs:sequence>
        <xs:element minOccurs="3" maxOccurs="3" ref="point"/>
      </xs:sequence>
      <xs:attribute name="code" use="required" type="xs:integer"/>
      <xs:attribute name="sequence" use="required" type="xs:integer"/>
      <xs:attribute name="type" use="required" type="xs:string"/>
    </xs:complexType>
  </xs:element>
  <xs:element name="bounds">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="x"/>
        <xs:element ref="y"/>
        <xs:element ref="width"/>
        <xs:element ref="height"/>
      </xs:sequence>
    </xs:complexType>
  </xs:element>
  <xs:element name="width">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:decimal">
          <xs:attribute name="class" use="required" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="height">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:decimal">
          <xs:attribute name="class" use="required" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="data" nillable="true">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:string">
          <xs:attribute name="encoding" use="required" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="area">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:decimal">
          <xs:attribute name="class" use="required" type="xs:string"/>
          <xs:attribute name="units" use="required" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="x">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:decimal">
          <xs:attribute name="class" use="required" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
  <xs:element name="y">
    <xs:complexType>
      <xs:simpleContent>
        <xs:extension base="xs:decimal">
          <xs:attribute name="class" use="required" type="xs:string"/>
        </xs:extension>
      </xs:simpleContent>
    </xs:complexType>
  </xs:element>
</xs:schema>
