//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.05.29 at 10:29:42 PM CEST 
//


package at.mug.iqm.config.jaxb;

/*
 * #%L
 * Project: IQM - API
 * File: ObjectFactory.java
 * 
 * $Id$
 * $HeadURL$
 * 
 * This file is part of IQM, hereinafter referred to as "this program".
 * %%
 * Copyright (C) 2009 - 2017 Helmut Ahammer, Philipp Kainz
 * %%
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/gpl-3.0.html>.
 * #L%
 */

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the at.mug.iqm.config.jaxb package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Interval_QNAME = new QName("", "interval");
    private final static QName _Root_QNAME = new QName("", "root");
    private final static QName _LastUpdate_QNAME = new QName("", "lastUpdate");
    private final static QName _Name_QNAME = new QName("", "name");
    private final static QName _Images_QNAME = new QName("", "images");
    private final static QName _Temp_QNAME = new QName("", "temp");
    private final static QName _LookAndFeel_QNAME = new QName("", "look-and-feel");
    private final static QName _Conf_QNAME = new QName("", "conf");
    private final static QName _Script_QNAME = new QName("", "script");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: at.mug.iqm.config.jaxb
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Application }
     * 
     */
    public Application createApplication() {
        return new Application();
    }

    /**
     * Create an instance of {@link Paths }
     * 
     */
    public Paths createPaths() {
        return new Paths();
    }

    /**
     * Create an instance of {@link CleanerTask }
     * 
     */
    public CleanerTask createCleanerTask() {
        return new CleanerTask();
    }

    /**
     * Create an instance of {@link MemoryMonitor }
     * 
     */
    public MemoryMonitor createMemoryMonitor() {
        return new MemoryMonitor();
    }

    /**
     * Create an instance of {@link Gui }
     * 
     */
    public Gui createGui() {
        return new Gui();
    }

    /**
     * Create an instance of {@link Annotations }
     * 
     */
    public Annotations createAnnotations() {
        return new Annotations();
    }

    /**
     * Create an instance of {@link IQMConfig }
     * 
     */
    public IQMConfig createIQMConfig() {
        return new IQMConfig();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Long }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "interval")
    public JAXBElement<Long> createInterval(Long value) {
        return new JAXBElement<Long>(_Interval_QNAME, Long.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "root", defaultValue = "${user.home}/IQM")
    public JAXBElement<String> createRoot(String value) {
        return new JAXBElement<String>(_Root_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link XMLGregorianCalendar }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "lastUpdate")
    public JAXBElement<XMLGregorianCalendar> createLastUpdate(XMLGregorianCalendar value) {
        return new JAXBElement<XMLGregorianCalendar>(_LastUpdate_QNAME, XMLGregorianCalendar.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "name")
    public JAXBElement<String> createName(String value) {
        return new JAXBElement<String>(_Name_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "images")
    public JAXBElement<String> createImages(String value) {
        return new JAXBElement<String>(_Images_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "temp", defaultValue = "${user.home}/IQM/temp")
    public JAXBElement<String> createTemp(String value) {
        return new JAXBElement<String>(_Temp_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "look-and-feel", defaultValue = "default")
    public JAXBElement<String> createLookAndFeel(String value) {
        return new JAXBElement<String>(_LookAndFeel_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "conf", defaultValue = "${user.home}/IQM/conf")
    public JAXBElement<String> createConf(String value) {
        return new JAXBElement<String>(_Conf_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "script", defaultValue = "${user.home}/IQM/script")
    public JAXBElement<String> createScript(String value) {
        return new JAXBElement<String>(_Script_QNAME, String.class, null, value);
    }

}
